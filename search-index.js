var searchIndex = {};
searchIndex['liquid'] = {"items":[[0,"","liquid","",null,null],[3,"Context","","",null,null],[12,"filters","","",0,null],[3,"LiquidOptions","","",null,null],[12,"blocks","","",1,null],[12,"tags","","",1,null],[12,"error_mode","","",1,null],[4,"Value","","An enum to represent different value types",null,null],[13,"Num","","",2,null],[13,"Str","","",2,null],[13,"Object","","",2,null],[13,"Array","","",2,null],[4,"ErrorMode","","The ErrorMode to use.\nThis currently does not have an effect, until\nErrorModes are properly implemented.",null,null],[13,"Strict","","",3,null],[13,"Warn","","",3,null],[13,"Lax","","",3,null],[5,"parse","","Parses a liquid template, returning a Template object.\n# Examples",null,{"inputs":[{"name":"str"},{"name":"liquidoptions"}],"output":{"name":"result"}}],[0,"lexer","","",null,null],[4,"ComparisonOperator","liquid::lexer","",null,null],[13,"Equals","","",4,null],[13,"NotEquals","","",4,null],[13,"LessThan","","",4,null],[13,"GreaterThan","","",4,null],[13,"LessThanEquals","","",4,null],[13,"GreaterThanEquals","","",4,null],[13,"Contains","","",4,null],[4,"Token","","",null,null],[13,"Pipe","","",5,null],[13,"Dot","","",5,null],[13,"Colon","","",5,null],[13,"Comma","","",5,null],[13,"OpenSquare","","",5,null],[13,"CloseSquare","","",5,null],[13,"OpenRound","","",5,null],[13,"CloseRound","","",5,null],[13,"Question","","",5,null],[13,"Dash","","",5,null],[13,"Identifier","","",5,null],[13,"StringLiteral","","",5,null],[13,"NumberLiteral","","",5,null],[13,"DotDot","","",5,null],[13,"Comparison","","",5,null],[4,"Element","","",null,null],[13,"Expression","","",6,null],[13,"Tag","","",6,null],[13,"Raw","","",6,null],[5,"tokenize","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"eq","","",4,{"inputs":[{"name":"comparisonoperator"},{"name":"comparisonoperator"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"comparisonoperator"},{"name":"comparisonoperator"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"comparisonoperator"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"comparisonoperator"}],"output":{"name":"comparisonoperator"}}],[11,"eq","","",5,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"token"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"eq","","",6,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"element"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"element"}],"output":{"name":"element"}}],[11,"fmt","liquid","",2,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"to_string","","",2,{"inputs":[{"name":"value"}],"output":{"name":"string"}}],[11,"render","","",2,{"inputs":[{"name":"value"},{"name":"context"}],"output":{"name":"option"}}],[11,"default","","",0,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new","","Creates a new, empty rendering context.",0,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"with_values","","",0,{"inputs":[{"name":"context"},{"name":"hashmap"}],"output":{"name":"context"}}],[11,"with_filters","","",0,{"inputs":[{"name":"context"},{"name":"hashmap"}],"output":{"name":"context"}}],[11,"with_values_and_filters","","",0,{"inputs":[{"name":"context"},{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"context"}}],[11,"get_val","","Gets a value from the rendering context.",0,{"inputs":[{"name":"context"},{"name":"str"}],"output":{"name":"option"}}],[11,"set_val","","Sets a value to the rendering context.\nNote that it needs to be wrapped in a liquid::Value.",0,{"inputs":[{"name":"context"},{"name":"str"},{"name":"value"}],"output":{"name":"option"}}],[8,"Tag","","A trait for creating custom tags.",null,null],[10,"initialize","","",7,null],[8,"Block","","The trait to use when implementing custom block-size tags ({% if something %})",null,null],[10,"initialize","","",8,null],[8,"Renderable","","Any object (tag/block) that can be rendered by liquid must implement this trait.",null,null],[10,"render","","",9,{"inputs":[{"name":"renderable"},{"name":"context"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"errormode"}],"output":{"name":"errormode"}}],[11,"default","","",3,{"inputs":[{"name":"errormode"}],"output":{"name":"errormode"}}],[11,"default","","",1,{"inputs":[{"name":"liquidoptions"}],"output":{"name":"liquidoptions"}}]],"paths":[[3,"Context"],[3,"LiquidOptions"],[4,"Value"],[4,"ErrorMode"],[4,"ComparisonOperator"],[4,"Token"],[4,"Element"],[8,"Tag"],[8,"Block"],[8,"Renderable"]]};
initSearch(searchIndex);
